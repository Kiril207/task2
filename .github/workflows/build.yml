# ... (ваш linux job, без изменений)

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        choco install sfml -y
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
        choco install wixtoolset -y

    - name: Install SFML
      run: |
        mkdir -p "C:/tools/SFML"
        $url = "https://www.sfml-dev.org/files/SFML-2.6.1-windows-vc17-64-bit.zip"
        Invoke-WebRequest -Uri $url -OutFile "sfml.zip"
        Expand-Archive -Path "sfml.zip" -DestinationPath "C:/tools/SFML"
        echo "C:/tools/SFML/bin" | Out-File -FilePath $env:GITHUB_PATH -Append

    - name: Build with CMake
      run: |
        mkdir build
        cd build
        cmake -DSFML_DIR="C:/tools/SFML" ..
        cmake --build . --config Release --target install

    - name: Create MSI package with all DLLs
      shell: pwsh
      run: |
        $componentGuid = [guid]::NewGuid().ToString().ToUpper()
        $upgradeGuid = [guid]::NewGuid().ToString().ToUpper()
        mkdir -p pkg/INSTALLDIR
        Copy-Item -Path "build/Release/snake.exe" -Destination "pkg/INSTALLDIR/"
        Copy-Item -Path "build/Release/*.dll" -Destination "pkg/INSTALLDIR/" -Force

        $dllFiles = Get-ChildItem -Path "pkg/INSTALLDIR" -Filter "*.dll"
        $fileEntries = ""
        foreach ($dll in $dllFiles) {
          $id = $dll.BaseName.Replace("-", "").Replace(".", "")
          $fileEntries += "                    <File Id=""$id"" Source=""pkg/INSTALLDIR/$($dll.Name)"" KeyPath=""no"" />`n"
        }

        $productWxs = @"
        <?xml version=""1.0""?>
        <Wix xmlns=""http://schemas.microsoft.com/wix/2006/wi"">
          <Product 
            Id=""*"" 
            Name=""Snake Game"" 
            Version=""1.0"" 
            Manufacturer=""YourCompany"" 
            Language=""1033""
            UpgradeCode=""$upgradeGuid"">
            <Package InstallerVersion=""200"" Compressed=""yes""/>
            <MediaTemplate EmbedCab=""yes""/>
            <Directory Id=""TARGETDIR"" Name=""SourceDir"">
              <Directory Id=""ProgramFilesFolder"">
                <Directory Id=""INSTALLDIR"" Name=""Snake Game"">
                  <Component Id=""MainComponent"" Guid=""$componentGuid"">
                    <File Id=""SnakeEXE"" Source=""pkg/INSTALLDIR/snake.exe"" KeyPath=""yes""/>
$fileEntries
                  </Component>
                </Directory>
              </Directory>
            </Directory>
            <Feature Id=""MainFeature"" Title=""Main Feature"" Level=""1"">
              <ComponentRef Id=""MainComponent""/>
            </Feature>
            <UIRef Id=""WixUI_InstallDir"" />
            <UIRef Id=""WixUI_ErrorProgressText"" />
            <Property Id=""WIXUI_INSTALLDIR"" Value=""INSTALLDIR"" />
          </Product>
        </Wix>
        "@
        Set-Content -Path product.wxs -Value $productWxs
        candle.exe product.wxs
        light.exe product.wixobj -ext WixUIExtension -out snake-game.msi
        if (Test-Path snake-game.msi) {
          echo "MSI package created successfully!"
        } else {
          echo "Failed to create MSI package!"
          exit 1
        }

    - name: Check MSI exists before upload
      run: |
        if (!(Test-Path -Path "snake-game.msi")) {
          echo "snake-game.msi not found!"
          exit 1
        }

    - name: Upload MSI artifact
      uses: actions/upload-artifact@v4
      with:
        name: snake-game-msi
        path: snake-game.msi
