name: Build and Package Snake Game

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang cmake libsfml-dev
        
    - name: Build with CMake
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_CXX_COMPILER=clang++ ..
        make
        
    - name: Create DEB package
      run: |
        mkdir -p snake-game/usr/games
        cp build/snake snake-game/usr/games/
        mkdir -p snake-game/DEBIAN
        echo "Package: snake-game" > snake-game/DEBIAN/control
        echo "Version: 1.0" >> snake-game/DEBIAN/control
        echo "Section: games" >> snake-game/DEBIAN/control
        echo "Priority: optional" >> snake-game/DEBIAN/control
        echo "Architecture: amd64" >> snake-game/DEBIAN/control
        echo "Maintainer: Your Name <your.email@example.com>" >> snake-game/DEBIAN/control
        echo "Description: Simple Snake Game" >> snake-game/DEBIAN/control
        dpkg-deb --build snake-game
        mv snake-game.deb snake-game_1.0_amd64.deb
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: snake-game-deb
        path: snake-game_1.0_amd64.deb

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        choco install sfml -y
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
        choco install wixtoolset -y  # Установка WiX Toolset
    - name: Install SFML
      run: |
        mkdir -p "C:/tools/SFML"
        $url = "https://www.sfml-dev.org/files/SFML-2.6.1-windows-vc17-64-bit.zip"
        Invoke-WebRequest -Uri $url -OutFile "sfml.zip"
        Expand-Archive -Path "sfml.zip" -DestinationPath "C:/tools/SFML"
        echo "C:/tools/SFML/bin" | Out-File -FilePath $env:GITHUB_PATH -Append
    
    - name: Build with CMake
      run: |
        mkdir build
        cd build
        cmake -DSFML_DIR="C:/tools/SFML" ..
        cmake --build . --config Release --target install
      
    - name: Create MSI package
      run: |
        # Генерируем GUID для компонента
        $componentGuid = [guid]::NewGuid().ToString().ToUpper()
        $upgradeGuid = [guid]::NewGuid().ToString().ToUpper()
        
        # Создаем структуру папок
        mkdir -p pkg/INSTALLDIR
        Copy-Item -Path "build/Release/snake.exe" -Destination "pkg/INSTALLDIR/"
        
        # Создаем WXS-файл с корректными GUID
        $productWxs = @"
        <?xml version="1.0"?>
        <Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
          <Product 
            Id="*" 
            Name="Snake Game" 
            Version="1.0" 
            Manufacturer="YourCompany" 
            Language="1033"
            UpgradeCode="$upgradeGuid">
            <Package InstallerVersion="200" Compressed="yes"/>
            <MediaTemplate EmbedCab="yes"/>
            
            <Directory Id="TARGETDIR" Name="SourceDir">
              <Directory Id="ProgramFilesFolder">
                <Directory Id="INSTALLDIR" Name="Snake Game">
                  <Component Id="MainComponent" Guid="$componentGuid">
                    <File Id="SnakeEXE" Source="pkg/INSTALLDIR/snake.exe" KeyPath="yes"/>
                  </Component>
                </Directory>
              </Directory>
            </Directory>
            
            <Feature Id="MainFeature" Title="Main Feature" Level="1">
              <ComponentRef Id="MainComponent"/>
            </Feature>
          </Product>
        </Wix>
        "@
        Set-Content -Path product.wxs -Value $productWxs
        
        # Компилируем и собираем MSI
        candle.exe product.wxs
        light.exe product.wixobj -ext WixUIExtension -out snake-game.msi
        
        if (Test-Path snake-game.msi) {
          echo "MSI package created successfully!"
        } else {
          echo "Failed to create MSI package!"
          exit 1
        }
    
    - name: Verify Required Files
      run: |
        if (!(Test-Path -Path "build/Release/snake.exe")) {
          echo "Error: snake.exe not found in build/Release!"
          exit 1
        }
        if (!(Test-Path -Path "product.wxs")) {
          echo "Error: product.wxs not found!"
          exit 1
        }
